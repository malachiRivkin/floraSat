/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_PROTO_FILES_PLANTSAT_PB_H_INCLUDED
#define PB_PROTO_FILES_PLANTSAT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SimpleMessage {
    int32_t unix_time;
    float air_temp;
    float air_pressure;
    float thermistor_1;
    float internal_temp;
} SimpleMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SimpleMessage_init_default               {0, 0, 0, 0, 0}
#define SimpleMessage_init_zero                  {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SimpleMessage_unix_time_tag              1
#define SimpleMessage_air_temp_tag               2
#define SimpleMessage_air_pressure_tag           3
#define SimpleMessage_thermistor_1_tag           4
#define SimpleMessage_internal_temp_tag          5

/* Struct field encoding specification for nanopb */
#define SimpleMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    unix_time,         1) \
X(a, STATIC,   REQUIRED, FLOAT,    air_temp,          2) \
X(a, STATIC,   REQUIRED, FLOAT,    air_pressure,      3) \
X(a, STATIC,   REQUIRED, FLOAT,    thermistor_1,      4) \
X(a, STATIC,   REQUIRED, FLOAT,    internal_temp,     5)
#define SimpleMessage_CALLBACK NULL
#define SimpleMessage_DEFAULT NULL

extern const pb_msgdesc_t SimpleMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SimpleMessage_fields &SimpleMessage_msg

/* Maximum encoded size of messages (where known) */
#define PROTO_FILES_PLANTSAT_PB_H_MAX_SIZE       SimpleMessage_size
#define SimpleMessage_size                       31

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
